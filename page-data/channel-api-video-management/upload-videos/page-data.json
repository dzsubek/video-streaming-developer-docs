{
    "componentChunkName": "component---src-pages-channel-api-video-management-upload-videos-mdx",
    "path": "/channel-api-video-management/upload-videos/",
    "result": {"pageContext":{"frontmatter":{"title":"Upload videos (via FTP)","description":"Channel API Video management Upload videos (via FTP)"},"relativePagePath":"/channel-api-video-management/upload-videos.mdx","titleType":"page","MdxNode":{"id":"b6eef004-4d6f-5523-acaf-b23a771d24f1","children":[],"parent":"6ff41038-87b5-5491-acef-677af885c575","internal":{"content":"---\ntitle: Upload videos (via FTP)\ndescription: Channel API Video management Upload videos (via FTP)\n---\n\n**IMPORTANT:** *Please note that this upload method is deprecated and will be discontinued later this year. We encourage yout to switch over to our new upload method found here: https://developers.video.ibm.com/channel-api-video-management/upload-videos-new*\n\nVideos can be uploaded by FTP. To upload a file you must do the following steps:\n\n1. Initiate an upload process by an API call. In the response you can find the details needed to connect through FTP.\n2. Upload the video.\n3. When the upload is finished, send a \"file in place\" signal, which tells the IBM server that it can start to process the file.\n4. Call the API to check the status of processing the video.\n\n## Initialize an upload\n\nInitiate the upload process.\n\n```\nPOST https://api.video.ibm.com/channels/{channel_id}/uploads.json?type=videoupload-ftp\n```\n\n### Parameters\n\nThe parameters for the POST request:\n\n| PARAMETER     | TYPE   | IMPORTANCE | DESCRIPTION                                                   |\n| ------------- | ------ | ---------- | ------------------------------------------------------------- |\n| `title`       | string | OPTIONAL   | Video title                                                   |\n| `description` | string | OPTIONAL   | Video description                                             |\n| `protect`     | string | OPTIONAL   | Video protection level. Supported values: `public`, `private` |\n\n### Success response\n\nUpon success a response with HTTP status \"200 OK\" is returned with the key-value pairs containing the details of the FTP access.\n\nExample of a success response:\n\n```json\n{\n  \"protocol\": \"ftp\",\n  \"host\": \"red44.ustream.tv\",\n  \"port\": 21,\n  \"path\": \"/1_12345_12345678901234\",\n  \"user\": \"1_12345_1234567890\",\n  \"password\": \"ftppw\",\n  \"videoId\": \"52177361\",\n  \"url\": \"ftp://1_1234_1234567890:ftppw@red44.ustream.tv/1_12345_12345678901234\"\n}\n```\n\n### Error responses\n\nPossible error responses:\n\n| HTTP RESPONSE CODE      | ERROR VALUE             | ERROR CONDITIONS                                                                        |\n| ----------------------- | ----------------------- | --------------------------------------------------------------------------------------- |\n| 400 Bad Request         | `protect_level_invalid` | Invalid protect level has been sent                                                     |\n| 401 Unauthorized        | `invalid_token`         | The provided access token is missing, revoked, expired or malformed                     |\n| 403 Forbidden           | `lack_of_ownership`     | The API user is not allowed to manage the given channel                                 |\n| 404 Not Found           | `not_found`             | Channel was not found                                                                   |\n| 429 Too Many Requests   | `too_many_requests`     | Rate limit exceeded ([Read more](/api-basics-rate-limits))                              |\n| 503 Service Unavailable |                         | There is a temporary error on the server which makes it impossible to serve the request |\n\n## Upload the video file\n\nUse the credentials you received in the response when you initialized the process to upload your video file to IBM servers. Once you log in to the FTP server, you should put your file to the root, under a name that matches with the `path` value of the response, followed by the extension.\n\nThe `url` part of the response makes it easier to transfer files, with a single FTP command. For example, if you have a file called `test.mov`, you can use the following FTP command to upload it:\n\n```\nftp -u\nftp://1_1234_1234567890:ftppw@red44.ustream.tv/1_12345_12345678901234.mov\ntest.mov\n```\n\nOr using the cURL command:\n\n```\ncurl \\\n  ftp://1_1234_1234567890:ftppw@sjc03-vod-upload02.services.video.ibm.com/1_12345_12345678901234 \\\n  -v -T test.mov\n```\n\nSupported file extensions are: mp4, mov, flv.\n\nDon't forget to set your FTP client to binary file transfer mode, before uploading the video file.\n\n## Send \"file in place\" signal\n\nA \"file in place\" signal tells to our server that it can start to process the file.\n\n```\nPUT https://api.video.ibm.com/channels/{channel_id}/uploads/{video_id}.json\n```\n\n### Parameters\n\nThe parameters for the PUT request:\n\n| PARAMETER | TYPE   | IMPORTANCE | DESCRIPTION                               |\n| --------- | ------ | ---------- | ----------------------------------------- |\n| `status`  | string | REQUIRED   | Upload status (the value should be `ready`) |\n\n### Success response\n\nUpon success, a response with HTTP status \"202 Accepted\" is returned.\n\n### Error responses\n\nPossible error responses:\n\n| HTTP RESPONSE CODE      | ERROR VALUE | ERROR CONDITIONS                                                                        |\n| ----------------------- | ----------- | --------------------------------------------------------------------------------------- |\n| 401 Unauthorized        |             | The provided access token is missing, revoked, expired or malformed                     |\n| 404 Not Found           | `not_found` | Channel or video was not found                                                          |\n| 503 Service Unavailable |             | There is a temporary error on the server which makes it impossible to serve the request |\n\n### Check status of processing\n\nReturns the status of processing the specific video.\n\n```\nGET https://api.video.ibm.com/channels/{channel_id}/uploads/{video_id}.json\n```\n\n### Parameters\n\nThis request has no parameters.\n\n### Success response\n\nUpon success a response with HTTP status \"200 OK\" is returned with a key-value pair.\n\n| KEY      | TYPE   | DESCRIPTION                                                                                                              |\n| -------- | ------ | ------------------------------------------------------------------------------------------------------------------------ |\n| `status` | string | The current status. Possible values: `initiated`, `transferred`, `queued`, `pending`, `transcoding`, `complete`, `error` |\n\n### Error responses\n\nPossible error responses:\n\n| HTTP RESPONSE CODE      | ERROR VALUE | ERROR CONDITIONS                                                                        |\n| ----------------------- | ----------- | --------------------------------------------------------------------------------------- |\n| 401 Unauthorized        |             | The provided access token is missing, revoked, expired or malformed                     |\n| 404 Not Found           | `not_found` | Channel was not found                                                                   |\n| 503 Service Unavailable |             | There is a temporary error on the server which makes it impossible to serve the request |\n","type":"Mdx","contentDigest":"64bfd3d0ba4e54a329d5e963290178cc","owner":"gatsby-plugin-mdx","counter":408},"frontmatter":{"title":"Upload videos (via FTP)","description":"Channel API Video management Upload videos (via FTP)"},"exports":{},"rawBody":"---\ntitle: Upload videos (via FTP)\ndescription: Channel API Video management Upload videos (via FTP)\n---\n\n**IMPORTANT:** *Please note that this upload method is deprecated and will be discontinued later this year. We encourage yout to switch over to our new upload method found here: https://developers.video.ibm.com/channel-api-video-management/upload-videos-new*\n\nVideos can be uploaded by FTP. To upload a file you must do the following steps:\n\n1. Initiate an upload process by an API call. In the response you can find the details needed to connect through FTP.\n2. Upload the video.\n3. When the upload is finished, send a \"file in place\" signal, which tells the IBM server that it can start to process the file.\n4. Call the API to check the status of processing the video.\n\n## Initialize an upload\n\nInitiate the upload process.\n\n```\nPOST https://api.video.ibm.com/channels/{channel_id}/uploads.json?type=videoupload-ftp\n```\n\n### Parameters\n\nThe parameters for the POST request:\n\n| PARAMETER     | TYPE   | IMPORTANCE | DESCRIPTION                                                   |\n| ------------- | ------ | ---------- | ------------------------------------------------------------- |\n| `title`       | string | OPTIONAL   | Video title                                                   |\n| `description` | string | OPTIONAL   | Video description                                             |\n| `protect`     | string | OPTIONAL   | Video protection level. Supported values: `public`, `private` |\n\n### Success response\n\nUpon success a response with HTTP status \"200 OK\" is returned with the key-value pairs containing the details of the FTP access.\n\nExample of a success response:\n\n```json\n{\n  \"protocol\": \"ftp\",\n  \"host\": \"red44.ustream.tv\",\n  \"port\": 21,\n  \"path\": \"/1_12345_12345678901234\",\n  \"user\": \"1_12345_1234567890\",\n  \"password\": \"ftppw\",\n  \"videoId\": \"52177361\",\n  \"url\": \"ftp://1_1234_1234567890:ftppw@red44.ustream.tv/1_12345_12345678901234\"\n}\n```\n\n### Error responses\n\nPossible error responses:\n\n| HTTP RESPONSE CODE      | ERROR VALUE             | ERROR CONDITIONS                                                                        |\n| ----------------------- | ----------------------- | --------------------------------------------------------------------------------------- |\n| 400 Bad Request         | `protect_level_invalid` | Invalid protect level has been sent                                                     |\n| 401 Unauthorized        | `invalid_token`         | The provided access token is missing, revoked, expired or malformed                     |\n| 403 Forbidden           | `lack_of_ownership`     | The API user is not allowed to manage the given channel                                 |\n| 404 Not Found           | `not_found`             | Channel was not found                                                                   |\n| 429 Too Many Requests   | `too_many_requests`     | Rate limit exceeded ([Read more](/api-basics-rate-limits))                              |\n| 503 Service Unavailable |                         | There is a temporary error on the server which makes it impossible to serve the request |\n\n## Upload the video file\n\nUse the credentials you received in the response when you initialized the process to upload your video file to IBM servers. Once you log in to the FTP server, you should put your file to the root, under a name that matches with the `path` value of the response, followed by the extension.\n\nThe `url` part of the response makes it easier to transfer files, with a single FTP command. For example, if you have a file called `test.mov`, you can use the following FTP command to upload it:\n\n```\nftp -u\nftp://1_1234_1234567890:ftppw@red44.ustream.tv/1_12345_12345678901234.mov\ntest.mov\n```\n\nOr using the cURL command:\n\n```\ncurl \\\n  ftp://1_1234_1234567890:ftppw@sjc03-vod-upload02.services.video.ibm.com/1_12345_12345678901234 \\\n  -v -T test.mov\n```\n\nSupported file extensions are: mp4, mov, flv.\n\nDon't forget to set your FTP client to binary file transfer mode, before uploading the video file.\n\n## Send \"file in place\" signal\n\nA \"file in place\" signal tells to our server that it can start to process the file.\n\n```\nPUT https://api.video.ibm.com/channels/{channel_id}/uploads/{video_id}.json\n```\n\n### Parameters\n\nThe parameters for the PUT request:\n\n| PARAMETER | TYPE   | IMPORTANCE | DESCRIPTION                               |\n| --------- | ------ | ---------- | ----------------------------------------- |\n| `status`  | string | REQUIRED   | Upload status (the value should be `ready`) |\n\n### Success response\n\nUpon success, a response with HTTP status \"202 Accepted\" is returned.\n\n### Error responses\n\nPossible error responses:\n\n| HTTP RESPONSE CODE      | ERROR VALUE | ERROR CONDITIONS                                                                        |\n| ----------------------- | ----------- | --------------------------------------------------------------------------------------- |\n| 401 Unauthorized        |             | The provided access token is missing, revoked, expired or malformed                     |\n| 404 Not Found           | `not_found` | Channel or video was not found                                                          |\n| 503 Service Unavailable |             | There is a temporary error on the server which makes it impossible to serve the request |\n\n### Check status of processing\n\nReturns the status of processing the specific video.\n\n```\nGET https://api.video.ibm.com/channels/{channel_id}/uploads/{video_id}.json\n```\n\n### Parameters\n\nThis request has no parameters.\n\n### Success response\n\nUpon success a response with HTTP status \"200 OK\" is returned with a key-value pair.\n\n| KEY      | TYPE   | DESCRIPTION                                                                                                              |\n| -------- | ------ | ------------------------------------------------------------------------------------------------------------------------ |\n| `status` | string | The current status. Possible values: `initiated`, `transferred`, `queued`, `pending`, `transcoding`, `complete`, `error` |\n\n### Error responses\n\nPossible error responses:\n\n| HTTP RESPONSE CODE      | ERROR VALUE | ERROR CONDITIONS                                                                        |\n| ----------------------- | ----------- | --------------------------------------------------------------------------------------- |\n| 401 Unauthorized        |             | The provided access token is missing, revoked, expired or malformed                     |\n| 404 Not Found           | `not_found` | Channel was not found                                                                   |\n| 503 Service Unavailable |             | There is a temporary error on the server which makes it impossible to serve the request |\n","fileAbsolutePath":"/home/runner/work/video-streaming-developer-docs/video-streaming-developer-docs/src/pages/channel-api-video-management/upload-videos.mdx"}}},
    "staticQueryHashes": ["1364590287","137577622","2102389209","2203542295","2746626797","3037994772","559098832","768070550"]}